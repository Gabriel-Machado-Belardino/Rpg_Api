using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Rpg_Api.Migrations
{
    public partial class MigracaoPerfil : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "Perfil",
                table: "Usuarios",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "Jogador");

            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 30, 91, 241, 118, 196, 188, 149, 198, 54, 119, 238, 108, 44, 39, 233, 179, 219, 37, 12, 96, 98, 243, 219, 5, 232, 55, 131, 149, 115, 160, 142, 149, 211, 102, 65, 95, 205, 59, 29, 60, 89, 31, 254, 224, 183, 141, 187, 197, 62, 47, 159, 136, 17, 200, 176, 96, 10, 43, 212, 37, 166, 213, 124, 97 }, new byte[] { 161, 96, 101, 229, 32, 208, 205, 4, 161, 26, 244, 43, 46, 159, 3, 203, 58, 211, 32, 22, 91, 100, 251, 12, 218, 72, 100, 31, 11, 66, 221, 221, 61, 69, 138, 197, 97, 82, 73, 245, 202, 245, 67, 28, 34, 90, 205, 51, 206, 192, 106, 17, 42, 116, 235, 51, 206, 152, 240, 29, 146, 118, 150, 47, 22, 2, 211, 116, 179, 25, 125, 221, 126, 122, 203, 243, 106, 90, 1, 119, 47, 28, 126, 72, 32, 174, 178, 120, 170, 78, 25, 49, 196, 220, 99, 6, 239, 207, 169, 30, 126, 187, 62, 99, 38, 136, 153, 103, 54, 161, 4, 167, 34, 23, 246, 12, 36, 234, 169, 229, 106, 76, 9, 221, 172, 171, 128, 242 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Perfil",
                table: "Usuarios");

            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 104, 169, 228, 220, 147, 42, 195, 61, 64, 226, 37, 48, 103, 75, 62, 63, 128, 206, 112, 27, 219, 209, 133, 179, 173, 116, 60, 6, 233, 115, 165, 232, 73, 232, 130, 90, 99, 154, 247, 65, 222, 3, 252, 104, 234, 14, 129, 125, 21, 186, 176, 232, 18, 66, 184, 109, 109, 244, 125, 138, 205, 26, 116, 56 }, new byte[] { 134, 210, 13, 95, 87, 52, 29, 229, 134, 30, 133, 246, 85, 82, 4, 138, 115, 60, 163, 48, 144, 11, 219, 29, 239, 69, 180, 176, 75, 164, 3, 173, 242, 190, 3, 85, 116, 36, 18, 101, 54, 232, 148, 106, 51, 183, 184, 209, 205, 242, 106, 217, 246, 230, 141, 63, 159, 59, 122, 178, 1, 223, 194, 45, 143, 88, 29, 208, 237, 97, 118, 89, 231, 207, 89, 203, 180, 126, 128, 120, 239, 125, 93, 116, 121, 107, 159, 176, 31, 91, 127, 223, 9, 57, 205, 240, 237, 232, 75, 71, 113, 67, 89, 100, 71, 65, 15, 247, 130, 220, 83, 146, 108, 190, 90, 231, 143, 221, 52, 160, 119, 91, 110, 166, 105, 182, 103, 87 } });
        }
    }
}
